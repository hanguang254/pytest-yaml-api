{"uid":"446ad0102ad0c226","name":"test_login_api[key2]","fullName":"test_login_api.Test_login#test_login_api","historyId":"606674f7b56ff0e8f2162633abab4f97","time":{"start":1661160438486,"stop":1661160438709,"duration":223},"status":"failed","statusMessage":"AssertionError: assert 20000 == 30000","statusTrace":"self = <test_login_api.Test_login object at 0x000001C544B42F80>\nkey = {'requests': {'data': {'password': 'admin', 'username': None}, 'expected': {'code': 20000}, 'headers': None, 'method': 'post', ...}}\n\n    @allure.story('登录自动化')\n    @pytest.mark.parametrize('key',api)\n    def test_login_api(self,key):\n        # 请求方法\n        method = ReadYaml.ReadYaml().get_method(key)\n        # 请求地址\n        url = ReadYaml.ReadYaml().get_url(key)\n        #请求参数\n        get_data= ReadYaml.ReadYaml().get_data(key)\n        # 期望值\n        expected = ReadYaml.ReadYaml().get_expected(key)\n        r = expected['code']\n        self.log.info('预期结果：{}'.format(r))\n        self.log.info('正在请求')\n        res = RequestsUitl.RequestsUitl().requests_send(method=method,url=url,data=get_data).json()\n        self.log.info('实际结果：{}'.format(res['code']))\n        try:\n>           assert r == res['code']\nE           assert 20000 == 30000\n\ntest_login_api.py:45: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_Test_login","time":{"start":1661160437980,"stop":1661160437981,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 20000 == 30000","statusTrace":"self = <test_login_api.Test_login object at 0x000001C544B42F80>\nkey = {'requests': {'data': {'password': 'admin', 'username': None}, 'expected': {'code': 20000}, 'headers': None, 'method': 'post', ...}}\n\n    @allure.story('登录自动化')\n    @pytest.mark.parametrize('key',api)\n    def test_login_api(self,key):\n        # 请求方法\n        method = ReadYaml.ReadYaml().get_method(key)\n        # 请求地址\n        url = ReadYaml.ReadYaml().get_url(key)\n        #请求参数\n        get_data= ReadYaml.ReadYaml().get_data(key)\n        # 期望值\n        expected = ReadYaml.ReadYaml().get_expected(key)\n        r = expected['code']\n        self.log.info('预期结果：{}'.format(r))\n        self.log.info('正在请求')\n        res = RequestsUitl.RequestsUitl().requests_send(method=method,url=url,data=get_data).json()\n        self.log.info('实际结果：{}'.format(res['code']))\n        try:\n>           assert r == res['code']\nE           assert 20000 == 30000\n\ntest_login_api.py:45: AssertionError","steps":[],"attachments":[{"uid":"da66c72ea2d7c11a","name":"log","source":"da66c72ea2d7c11a.txt","type":"text/plain","size":277}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"_xunit_setup_class_fixture_Test_login::0","time":{"start":1661160438712,"stop":1661160438712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"登录接口"},{"name":"story","value":"登录自动化"},{"name":"suite","value":"test_login_api"},{"name":"subSuite","value":"Test_login"},{"name":"host","value":"WINDOWS-MLQ4KS6"},{"name":"thread","value":"14524-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_login_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"key","value":"{'requests': {'name': '登录失败2', 'method': 'post', 'url': 'http://160.116.208.79:8090/api/user/login', 'headers': None, 'data': {'username': None, 'password': 'admin'}, 'expected': {'code': 20000}}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"446ad0102ad0c226.json","parameterValues":["{'requests': {'name': '登录失败2', 'method': 'post', 'url': 'http://160.116.208.79:8090/api/user/login', 'headers': None, 'data': {'username': None, 'password': 'admin'}, 'expected': {'code': 20000}}}"]}